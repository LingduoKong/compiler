../add.c
int : Type
printd : IDENT
( : Left-parenthesis
int : Type
i : IDENT
) : Right-parenthesis
; : punctuation
int : Type
main : IDENT
( : Left-parenthesis
) : Right-parenthesis
{ : Left-bracket
int : Type
i : IDENT
, : punctuation
j : IDENT
; : punctuation
i : IDENT
= : Expression
45000 : CONST_INT
; : punctuation
j : IDENT
= : Expression
- : Operator
123 : CONST_INT
; : punctuation
printd : IDENT
( : Left-parenthesis
i : IDENT
+ : Operator
j : IDENT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
45000 : CONST_INT
+ : Operator
j : IDENT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
i : IDENT
+ : Operator
123 : CONST_INT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
45000 : CONST_INT
+ : Operator
123 : CONST_INT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
i : IDENT
+ : Operator
( : Left-parenthesis
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
( : Left-parenthesis
i : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
+ : Operator
j : IDENT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
( : Left-parenthesis
i : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
+ : Operator
( : Left-parenthesis
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
( : Left-parenthesis
i : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
+ : Operator
123 : CONST_INT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
45000 : CONST_INT
+ : Operator
( : Left-parenthesis
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
return : IDENT
0 : CONST_INT
; : punctuation
} : Right-bracket
../compteur.c
int : Type
sleep : IDENT
( : Left-parenthesis
int : Type
t : IDENT
) : Right-parenthesis
; : punctuation
int : Type
main : IDENT
( : Left-parenthesis
) : Right-parenthesis
{ : Left-bracket
int : Type
i : IDENT
; : punctuation
for : Control
( : Left-parenthesis
i : IDENT
= : Expression
0 : CONST_INT
; : punctuation
i : IDENT
< : Comparison operation
1000 : CONST_INT
; : punctuation
i : IDENT
= : Expression
i : IDENT
+ : Operator
1 : CONST_INT
) : Right-parenthesis
{ : Left-bracket
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
printf : IDENT
( : Left-parenthesis
"\n" : CONST-STRING
) : Right-parenthesis
; : punctuation
sleep : IDENT
( : Left-parenthesis
1 : CONST_INT
) : Right-parenthesis
; : punctuation
printf : IDENT
( : Left-parenthesis
27 : CONST_INT
+ : Operator
"M" : CONST-STRING
) : Right-parenthesis
; : punctuation
} : Right-bracket
return : IDENT
0 : CONST_INT
; : punctuation
} : Right-bracket
../cond.c
int : Type
printd : IDENT
( : Left-parenthesis
int : Type
i : IDENT
) : Right-parenthesis
; : punctuation
int : Type
main : IDENT
( : Left-parenthesis
) : Right-parenthesis
{ : Left-bracket
int : Type
i : IDENT
, : punctuation
j : IDENT
; : punctuation
i : IDENT
= : Expression
450 : CONST_INT
; : punctuation
j : IDENT
= : Expression
- : Operator
123 : CONST_INT
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
+ : Operator
1 : CONST_INT
< : Comparison operation
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
+ : Operator
1 : CONST_INT
< : Comparison operation
123 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
+ : Operator
1 : CONST_INT
< : Comparison operation
j : IDENT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
45 : CONST_INT
< : Comparison operation
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
45 : CONST_INT
< : Comparison operation
123 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
45 : CONST_INT
< : Comparison operation
j : IDENT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
< : Comparison operation
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
< : Comparison operation
123 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
< : Comparison operation
j : IDENT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
+ : Operator
1 : CONST_INT
> : Comparison operation
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
+ : Operator
1 : CONST_INT
> : Comparison operation
123 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
+ : Operator
1 : CONST_INT
> : Comparison operation
j : IDENT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
45 : CONST_INT
> : Comparison operation
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
45 : CONST_INT
> : Comparison operation
123 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
45 : CONST_INT
> : Comparison operation
j : IDENT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
> : Comparison operation
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
> : Comparison operation
123 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
> : Comparison operation
j : IDENT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
+ : Operator
1 : CONST_INT
>= : Comparison operation
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
+ : Operator
1 : CONST_INT
>= : Comparison operation
123 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
+ : Operator
1 : CONST_INT
>= : Comparison operation
j : IDENT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
45 : CONST_INT
>= : Comparison operation
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
45 : CONST_INT
>= : Comparison operation
123 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
45 : CONST_INT
>= : Comparison operation
j : IDENT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
>= : Comparison operation
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
>= : Comparison operation
123 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
>= : Comparison operation
j : IDENT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
+ : Operator
1 : CONST_INT
<= : Comparison operation
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
+ : Operator
1 : CONST_INT
<= : Comparison operation
123 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
+ : Operator
1 : CONST_INT
<= : Comparison operation
j : IDENT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
45 : CONST_INT
<= : Comparison operation
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
45 : CONST_INT
<= : Comparison operation
123 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
45 : CONST_INT
<= : Comparison operation
j : IDENT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
<= : Comparison operation
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
<= : Comparison operation
123 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
<= : Comparison operation
j : IDENT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
+ : Operator
1 : CONST_INT
== : Comparison operation
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
+ : Operator
1 : CONST_INT
== : Comparison operation
123 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
+ : Operator
1 : CONST_INT
== : Comparison operation
j : IDENT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
45 : CONST_INT
== : Comparison operation
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
45 : CONST_INT
== : Comparison operation
123 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
45 : CONST_INT
== : Comparison operation
j : IDENT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
== : Comparison operation
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
== : Comparison operation
123 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
== : Comparison operation
j : IDENT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
+ : Operator
1 : CONST_INT
!= : Comparison operation
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
+ : Operator
1 : CONST_INT
!= : Comparison operation
123 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
+ : Operator
1 : CONST_INT
!= : Comparison operation
j : IDENT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
45 : CONST_INT
!= : Comparison operation
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
45 : CONST_INT
!= : Comparison operation
123 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
45 : CONST_INT
!= : Comparison operation
j : IDENT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
!= : Comparison operation
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
!= : Comparison operation
123 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
if : Control
( : Left-parenthesis
i : IDENT
!= : Comparison operation
j : IDENT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
else : Control
printd : IDENT
( : Left-parenthesis
j : IDENT
) : Right-parenthesis
; : punctuation
return : IDENT
0 : CONST_INT
; : punctuation
} : Right-bracket
../div.c
int : Type
printd : IDENT
( : Left-parenthesis
int : Type
i : IDENT
) : Right-parenthesis
; : punctuation
int : Type
main : IDENT
( : Left-parenthesis
) : Right-parenthesis
{ : Left-bracket
int : Type
i : IDENT
, : punctuation
j : IDENT
; : punctuation
i : IDENT
= : Expression
45000 : CONST_INT
; : punctuation
j : IDENT
= : Expression
- : Operator
123 : CONST_INT
; : punctuation
printd : IDENT
( : Left-parenthesis
i : IDENT
/ : Multiplicative expression
j : IDENT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
45000 : CONST_INT
/ : Multiplicative expression
j : IDENT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
i : IDENT
/ : Multiplicative expression
123 : CONST_INT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
45000 : CONST_INT
/ : Multiplicative expression
123 : CONST_INT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
i : IDENT
/ : Multiplicative expression
( : Left-parenthesis
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
( : Left-parenthesis
i : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
/ : Multiplicative expression
j : IDENT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
( : Left-parenthesis
i : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
/ : Multiplicative expression
( : Left-parenthesis
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
( : Left-parenthesis
i : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
/ : Multiplicative expression
123 : CONST_INT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
45000 : CONST_INT
/ : Multiplicative expression
( : Left-parenthesis
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
return : IDENT
0 : CONST_INT
; : punctuation
} : Right-bracket
../erato.c
Compiler Error: #ifdef
../expr.c
int : Type
printd : IDENT
( : Left-parenthesis
int : Type
i : IDENT
) : Right-parenthesis
; : punctuation
int : Type
main : IDENT
( : Left-parenthesis
) : Right-parenthesis
{ : Left-bracket
int : Type
i : IDENT
, : punctuation
j : IDENT
, : punctuation
k : IDENT
; : punctuation
i : IDENT
= : Expression
45000 : CONST_INT
; : punctuation
j : IDENT
= : Expression
- : Operator
123 : CONST_INT
; : punctuation
k : IDENT
= : Expression
43 : CONST_INT
; : punctuation
printd : IDENT
( : Left-parenthesis
( : Left-parenthesis
( : Left-parenthesis
i : IDENT
+ : Operator
j : IDENT
) : Right-parenthesis
* : Multiplicative expression
k : IDENT
/ : Multiplicative expression
100 : CONST_INT
+ : Operator
j : IDENT
* : Multiplicative expression
k : IDENT
% : Multiplicative expression
i : IDENT
- : Operator
j : IDENT
<< : Expression
k : IDENT
) : Right-parenthesis
/ : Multiplicative expression
( : Left-parenthesis
k : IDENT
- : Operator
j : IDENT
>> : Expression
2 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
return : IDENT
0 : CONST_INT
; : punctuation
} : Right-bracket
../foo.c
main : IDENT
( : Left-parenthesis
) : Right-parenthesis
{ : Left-bracket
String : IDENT
str : IDENT
= : Expression
"abc /* abc */" : CONST-STRING
; : punctuation
String : IDENT
s : IDENT
= : Expression
"// 12345" : CONST-STRING
; : punctuation
return : IDENT
min : IDENT
( : Left-parenthesis
1 : CONST_INT
, : punctuation
2 : CONST_INT
) : Right-parenthesis
; : punctuation
} : Right-bracket
../functions.c
int : Type
printd : IDENT
( : Left-parenthesis
int : Type
i : IDENT
) : Right-parenthesis
; : punctuation
int : Type
fact : IDENT
( : Left-parenthesis
int : Type
n : IDENT
) : Right-parenthesis
{ : Left-bracket
if : Control
( : Left-parenthesis
n : IDENT
<= : Comparison operation
1 : CONST_INT
) : Right-parenthesis
return : IDENT
1 : CONST_INT
; : punctuation
return : IDENT
n : IDENT
* : Multiplicative expression
fact : IDENT
( : Left-parenthesis
n : IDENT
- : Operator
1 : CONST_INT
) : Right-parenthesis
; : punctuation
} : Right-bracket
int : Type
main : IDENT
( : Left-parenthesis
) : Right-parenthesis
{ : Left-bracket
printd : IDENT
( : Left-parenthesis
fact : IDENT
( : Left-parenthesis
10 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
return : IDENT
0 : CONST_INT
; : punctuation
} : Right-bracket
../lib.c
int : Type
printd : IDENT
( : Left-parenthesis
int : Type
d : IDENT
) : Right-parenthesis
{ : Left-bracket
return : IDENT
printf : IDENT
( : Left-parenthesis
"%d" : CONST-STRING
, : punctuation
d : IDENT
) : Right-parenthesis
; : punctuation
} : Right-bracket
int : Type
get_char_at : IDENT
( : Left-parenthesis
char : IDENT
* : Multiplicative expression
s : IDENT
, : punctuation
int : Type
i : IDENT
) : Right-parenthesis
{ : Left-bracket
return : IDENT
s : IDENT
[ : Left-square
i : IDENT
] : Right-square
; : punctuation
} : Right-bracket
int : Type
put_char_at : IDENT
( : Left-parenthesis
char : IDENT
* : Multiplicative expression
s : IDENT
, : punctuation
int : Type
i : IDENT
, : punctuation
int : Type
c : IDENT
) : Right-parenthesis
{ : Left-bracket
s : IDENT
[ : Left-square
i : IDENT
] : Right-square
= : Expression
c : IDENT
; : punctuation
return : IDENT
c : IDENT
; : punctuation
} : Right-bracket
../loops.c
int : Type
printd : IDENT
( : Left-parenthesis
int : Type
i : IDENT
) : Right-parenthesis
; : punctuation
int : Type
main : IDENT
( : Left-parenthesis
) : Right-parenthesis
{ : Left-bracket
int : Type
i : IDENT
; : punctuation
i : IDENT
= : Expression
0 : CONST_INT
; : punctuation
while : Control
( : Left-parenthesis
i : IDENT
< : Comparison operation
10 : CONST_INT
) : Right-parenthesis
{ : Left-bracket
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
i : IDENT
= : Expression
i : IDENT
+ : Operator
2 : CONST_INT
; : punctuation
} : Right-bracket
for : Control
( : Left-parenthesis
i : IDENT
= : Expression
- : Operator
10 : CONST_INT
; : punctuation
i : IDENT
<= : Comparison operation
10 : CONST_INT
; : punctuation
i : IDENT
= : Expression
i : IDENT
+ : Operator
1 : CONST_INT
) : Right-parenthesis
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
i : IDENT
= : Expression
0 : CONST_INT
; : punctuation
do : Control
{ : Left-bracket
printd : IDENT
( : Left-parenthesis
i : IDENT
) : Right-parenthesis
; : punctuation
i : IDENT
= : Expression
i : IDENT
- : Operator
1 : CONST_INT
; : punctuation
} : Right-bracket
while : Control
( : Left-parenthesis
i : IDENT
>= : Comparison operation
- : Operator
20 : CONST_INT
) : Right-parenthesis
; : punctuation
return : IDENT
0 : CONST_INT
; : punctuation
} : Right-bracket
../lsh.c
int : Type
printd : IDENT
( : Left-parenthesis
int : Type
i : IDENT
) : Right-parenthesis
; : punctuation
int : Type
main : IDENT
( : Left-parenthesis
) : Right-parenthesis
{ : Left-bracket
int : Type
i : IDENT
, : punctuation
j : IDENT
; : punctuation
i : IDENT
= : Expression
45000 : CONST_INT
; : punctuation
j : IDENT
= : Expression
3 : CONST_INT
; : punctuation
printd : IDENT
( : Left-parenthesis
i : IDENT
<< : Expression
j : IDENT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
45000 : CONST_INT
<< : Expression
j : IDENT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
i : IDENT
<< : Expression
3 : CONST_INT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
45000 : CONST_INT
<< : Expression
3 : CONST_INT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
i : IDENT
<< : Expression
( : Left-parenthesis
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
( : Left-parenthesis
i : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
<< : Expression
j : IDENT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
( : Left-parenthesis
i : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
<< : Expression
( : Left-parenthesis
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
( : Left-parenthesis
i : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
<< : Expression
3 : CONST_INT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
45000 : CONST_INT
<< : Expression
( : Left-parenthesis
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
return : IDENT
0 : CONST_INT
; : punctuation
} : Right-bracket
../mod.c
int : Type
printd : IDENT
( : Left-parenthesis
int : Type
i : IDENT
) : Right-parenthesis
; : punctuation
int : Type
main : IDENT
( : Left-parenthesis
) : Right-parenthesis
{ : Left-bracket
int : Type
i : IDENT
, : punctuation
j : IDENT
; : punctuation
i : IDENT
= : Expression
45000 : CONST_INT
; : punctuation
j : IDENT
= : Expression
123 : CONST_INT
; : punctuation
printd : IDENT
( : Left-parenthesis
i : IDENT
% : Multiplicative expression
j : IDENT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
45000 : CONST_INT
% : Multiplicative expression
j : IDENT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
i : IDENT
% : Multiplicative expression
123 : CONST_INT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
45000 : CONST_INT
% : Multiplicative expression
123 : CONST_INT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
i : IDENT
% : Multiplicative expression
( : Left-parenthesis
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
( : Left-parenthesis
i : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
% : Multiplicative expression
j : IDENT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
( : Left-parenthesis
i : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
% : Multiplicative expression
( : Left-parenthesis
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
( : Left-parenthesis
i : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
% : Multiplicative expression
123 : CONST_INT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
45000 : CONST_INT
% : Multiplicative expression
( : Left-parenthesis
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
return : IDENT
0 : CONST_INT
; : punctuation
} : Right-bracket
../mul.c
int : Type
printd : IDENT
( : Left-parenthesis
int : Type
i : IDENT
) : Right-parenthesis
; : punctuation
int : Type
main : IDENT
( : Left-parenthesis
) : Right-parenthesis
{ : Left-bracket
int : Type
i : IDENT
, : punctuation
j : IDENT
; : punctuation
i : IDENT
= : Expression
45000 : CONST_INT
; : punctuation
j : IDENT
= : Expression
- : Operator
123 : CONST_INT
; : punctuation
printd : IDENT
( : Left-parenthesis
i : IDENT
* : Multiplicative expression
j : IDENT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
45000 : CONST_INT
* : Multiplicative expression
j : IDENT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
i : IDENT
* : Multiplicative expression
123 : CONST_INT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
45000 : CONST_INT
* : Multiplicative expression
123 : CONST_INT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
i : IDENT
* : Multiplicative expression
( : Left-parenthesis
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
( : Left-parenthesis
i : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
* : Multiplicative expression
j : IDENT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
( : Left-parenthesis
i : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
* : Multiplicative expression
( : Left-parenthesis
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
( : Left-parenthesis
i : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
* : Multiplicative expression
123 : CONST_INT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
45000 : CONST_INT
* : Multiplicative expression
( : Left-parenthesis
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
return : IDENT
0 : CONST_INT
; : punctuation
} : Right-bracket
../neg.c
int : Type
printd : IDENT
( : Left-parenthesis
int : Type
i : IDENT
) : Right-parenthesis
; : punctuation
int : Type
main : IDENT
( : Left-parenthesis
) : Right-parenthesis
{ : Left-bracket
int : Type
j : IDENT
; : punctuation
j : IDENT
= : Expression
123 : CONST_INT
; : punctuation
printd : IDENT
( : Left-parenthesis
- : Operator
j : IDENT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
- : Operator
123 : CONST_INT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
- : Operator
( : Left-parenthesis
123 : CONST_INT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
- : Operator
( : Left-parenthesis
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
return : IDENT
0 : CONST_INT
; : punctuation
} : Right-bracket
../opti.c
Compiler Error: '
../rsh.c
int : Type
printd : IDENT
( : Left-parenthesis
int : Type
i : IDENT
) : Right-parenthesis
; : punctuation
int : Type
main : IDENT
( : Left-parenthesis
) : Right-parenthesis
{ : Left-bracket
int : Type
i : IDENT
, : punctuation
j : IDENT
; : punctuation
i : IDENT
= : Expression
45000 : CONST_INT
; : punctuation
j : IDENT
= : Expression
3 : CONST_INT
; : punctuation
printd : IDENT
( : Left-parenthesis
i : IDENT
>> : Expression
j : IDENT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
45000 : CONST_INT
>> : Expression
j : IDENT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
i : IDENT
>> : Expression
3 : CONST_INT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
45000 : CONST_INT
>> : Expression
3 : CONST_INT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
i : IDENT
>> : Expression
( : Left-parenthesis
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
( : Left-parenthesis
i : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
>> : Expression
j : IDENT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
( : Left-parenthesis
i : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
>> : Expression
( : Left-parenthesis
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
( : Left-parenthesis
i : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
>> : Expression
3 : CONST_INT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
45000 : CONST_INT
>> : Expression
( : Left-parenthesis
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
return : IDENT
0 : CONST_INT
; : punctuation
} : Right-bracket
../string.c
Compiler Error: #ifdef
../string2.c
Compiler Error: #ifdef
../string3.c
Compiler Error: #ifdef
../sub.c
int : Type
printd : IDENT
( : Left-parenthesis
int : Type
i : IDENT
) : Right-parenthesis
; : punctuation
int : Type
main : IDENT
( : Left-parenthesis
) : Right-parenthesis
{ : Left-bracket
int : Type
i : IDENT
, : punctuation
j : IDENT
; : punctuation
i : IDENT
= : Expression
45000 : CONST_INT
; : punctuation
j : IDENT
= : Expression
- : Operator
123 : CONST_INT
; : punctuation
printd : IDENT
( : Left-parenthesis
i : IDENT
- : Operator
j : IDENT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
45000 : CONST_INT
- : Operator
j : IDENT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
i : IDENT
- : Operator
123 : CONST_INT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
45000 : CONST_INT
- : Operator
123 : CONST_INT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
i : IDENT
- : Operator
( : Left-parenthesis
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
( : Left-parenthesis
i : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
- : Operator
j : IDENT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
( : Left-parenthesis
i : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
- : Operator
( : Left-parenthesis
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
( : Left-parenthesis
i : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
- : Operator
123 : CONST_INT
) : Right-parenthesis
; : punctuation
printd : IDENT
( : Left-parenthesis
45000 : CONST_INT
- : Operator
( : Left-parenthesis
j : IDENT
+ : Operator
0 : CONST_INT
) : Right-parenthesis
) : Right-parenthesis
; : punctuation
return : IDENT
0 : CONST_INT
; : punctuation
} : Right-bracket
../test.c
main : IDENT
( : Left-parenthesis
) : Right-parenthesis
{ : Left-bracket
return : IDENT
min : IDENT
( : Left-parenthesis
1 : CONST_INT
, : punctuation
2 : CONST_INT
) : Right-parenthesis
; : punctuation
} : Right-bracket
../toto.c
Compiler Error: C#include
